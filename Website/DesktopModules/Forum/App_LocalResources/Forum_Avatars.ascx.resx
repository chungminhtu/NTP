<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ControlTitle_avatarmanager.Text" xml:space="preserve">
    <value>Avatar Manager</value>
  </data>
  <data name="plEnableSystemAvatar.Help" xml:space="preserve">
    <value>site or Forum administrators will be permitted to assign avatar images to specific users of their choice. This is done per user, not by role. </value>
  </data>
  <data name="plEnableSystemAvatar.Text" xml:space="preserve">
    <value>Enable System Avatar</value>
  </data>
  <data name="plEnableUserAvatar.Help" xml:space="preserve">
    <value>If checked, users will be allowed to upload one image for their profile that will be displayed in posts view and also in their profile. </value>
  </data>
  <data name="plEnableUserAvatar.Text" xml:space="preserve">
    <value>Enable User Avatar</value>
  </data>
  <data name="plEnableUserAvatarPool.Help" xml:space="preserve">
    <value>If checked, you can upload a folder of images for users to choose from to represent their profile avatar. To enable, you must have User Avatars enabled.&lt;br&gt;&lt;b&gt;NOTE&lt;/b&gt;&lt;br&gt;Users can not upload their own images to select as their user avatar associated with their profile.  </value>
  </data>
  <data name="plEnableUserAvatarPool.Text" xml:space="preserve">
    <value>Enable Avatar Image Pool</value>
  </data>
  <data name="plSystemAvatarDimensions.Help" xml:space="preserve">
    <value>The W x H the generated thumbnails will be for the system avatars. </value>
  </data>
  <data name="plSystemAvatarDimensions.Text" xml:space="preserve">
    <value>System Avatar Dimensions</value>
  </data>
  <data name="plSystemAvatarPath.Help" xml:space="preserve">
    <value>The system avatar path is located in the &lt;strong&gt;portal root directory&lt;/strong&gt;.&lt;br&gt;ie. domain.com/Portals/0/</value>
  </data>
  <data name="plSystemAvatarPath.Text" xml:space="preserve">
    <value>System Avatar Path</value>
  </data>
  <data name="plSystemAvatarSizeLimit.Help" xml:space="preserve">
    <value>The file size limit (in KB) that the uploaded system avatar images are limited to. </value>
  </data>
  <data name="plSystemAvatarSizeLimit.Text" xml:space="preserve">
    <value>System Image Size Limit</value>
  </data>
  <data name="plUserAvatarDimensions.Help" xml:space="preserve">
    <value>The W x H the generated thumbnails will be for the user avatars.</value>
  </data>
  <data name="plUserAvatarDimensions.Text" xml:space="preserve">
    <value>User Avatar Dimensions</value>
  </data>
  <data name="plUserAvatarPath.Help" xml:space="preserve">
    <value>The user avatar path is located in the &lt;strong&gt;portal root directory&lt;/strong&gt;.&lt;br&gt;ie. domain.com/Portals/0/</value>
  </data>
  <data name="plUserAvatarPath.Text" xml:space="preserve">
    <value>User Avatar Path</value>
  </data>
  <data name="plUserAvatarSizeLimit.Help" xml:space="preserve">
    <value>The file size limit (in KB) that the uploaded user avatar images are limited to. </value>
  </data>
  <data name="plUserAvatarSizeLimit.Text" xml:space="preserve">
    <value>User Image Size Limit</value>
  </data>
  <data name="validSystemDimHeight.Text" xml:space="preserve">
    <value>Invalid value for system avatar height.</value>
  </data>
  <data name="validSystemDimWidth.Text" xml:space="preserve">
    <value>Invalid value for system avatar width.</value>
  </data>
  <data name="validSystemSize.Text" xml:space="preserve">
    <value>Invalid value for system avatar size limit.</value>
  </data>
  <data name="validUserDimHeight.Text" xml:space="preserve">
    <value>Invalid value for user avatar height.</value>
  </data>
  <data name="validUserDimWidth.Text" xml:space="preserve">
    <value>Invalid value for user avatar width.</value>
  </data>
  <data name="validUserSize.Text" xml:space="preserve">
    <value>Invalid value for user avatar size limit.</value>
  </data>
</root>